Business task: It is necessary to bring data in different input tables in accordance with the reference table.
To do this, you need to pull out from the input tables all the data that do not coincide with the standard and enter them into EXCEPTIONS together with the data of inconsistencies (error code, value from the input table) for further analysis manually or automatically.
After each parsing, one more cycle of full comparison-scanning of all data from the input table is performed.
If, after processing and rescaning the input table, the error has changed or been eliminated, then the data in EXCEPTIONS should be changed or deleted.
The presence of the entered error in EXCEPTIONS is determined by the fields ID_XREF+XREF_TABLE_NAME +ERR_ID+SRC_KEY_VAL.


It is necessary to implement in the form of an embedded procedure a part of the process associated with scanning, comparing with a standard and changing EXCEPTIONS.

As input parameters, the procedure must be able to accept (to create a dynamic query)
1. The name of the reference table + reference field for comparison (Example: PRODUCT_XREF and OUT_OF_PRINT_DATE). The reference table always contains the "ID_XREF" field
2. Input table name + compare field (Example: AUTHORS and END_DATE)
3. Join Constraint: ID_XREF or OBJ_ID (Example: PRODUCT_XREF.ID_XREF = AUTHORS.ID_XREF)
4. Comparative Constraint defining a match with a reference (Example: PRODUCT_XREF.OUT_OF_PRINT_DATE = AUTHORS.END_DATE)
   If Constraint is not executed, then the input data does not match the standard.
   Comparative Constraint can be difficult and consist of several comparisons in several fields.
5. ERR_NM error name


Reference Table:
CREATE TABLE "PRODUCT_XREF" (
                    "ID_XREF" NUMBER(38,0) NOT NULL ENABLE, 
                    "SYSTEM" CHAR(14 CHAR) NOT NULL ENABLE, 
                    "OBJ_ID" NUMBER(38,0), 
                    "END_DATE" DATE, 
                    "OUT_OF_PRINT_DATE" DATE, 
                    "TITLE"      VARCHAR2(1000 CHAR)
                    CONSTRAINT "PRODUCT_XREF_PK" PRIMARY KEY ("ID_XREF")
)

Error table:
CREATE TABLE "ERRORS" (
                    "ERR_ID" NUMBER NOT NULL ENABLE, 
                    "ERR_NM" VARCHAR2(30 CHAR), 
                     CONSTRAINT "ERRORS_PK" PRIMARY KEY ("ERR_ID")
)

Discrepancy table:
CREATE TABLE "EXCEPTIONS" (
                    "ID_XREF" NUMBER, 
                    "XREF_TABLE_NAME" VARCHAR2(30 CHAR),
                    "SRC_KEY_VAL" VARCHAR2(255 CHAR),  -- Значение из входной таблицы
                    "ERR_ID" NUMBER NOT NULL ENABLE, 
                    "CREATE_DATE" DATE,
                    CONSTRAINT "EXCEPTIONS_ERR_ID_FK" FOREIGN KEY ("ERR_ID") REFERENCES "ERRORS" ("ERR_ID") ENABLE
)


Actually unique key of this table is ID_XREF + XREF_TABLE_NAME + ERR_ID


Name and structure of the input table come up independently.
As examples:
CREATE TABLE "AUTHORS" (
                     "ID_XREF" NUMBER(38,0) NOT NULL ENABLE, 
                     "AUTHOR"  CHAR(100 CHAR) NOT NULL ENABLE,
                     "END_DATE" DATE
                     CONSTRAINT "AUTHORS_PK" PRIMARY KEY ("ID_XREF")
)
CREATE TABLE "OBJTREE" (
                    "ID" NUMBER(38,0) NOT NULL ENABLE, 
                    "OBJ_ID" NUMBER(38,0),
                    "SYSTEM" CHAR(14 CHAR) NOT NULL ENABLE,
                    "TITLE"      VARCHAR2(1000 CHAR)
                     CONSTRAINT "OBJTREE_PK" PRIMARY KEY ("ID")
)
